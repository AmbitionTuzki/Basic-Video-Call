name: Basic Video Call CI - iOS 
on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build_ios_objc:
    name: Build iOS(Objective-C)
    runs-on: macos-latest
    env:
      XC_PROJECT_NAME: ${{ 'NERtcSample-1to1-iOS-Objective-C' }}
      XC_VERSION: ${{ '11.4' }}
      XC_SCHEME: ${{ 'NERTC1to1Sample' }}
      XC_WORKSPACE: ${{ 'NERTC1to1Sample.xcworkspace' }}
      XC_CONFIGURATION: ${{ 'release' }}
      XC_ARCHIVE_DIR: ${{ './product/archive' }}
      XC_IPA_DIR: ${{ './product/ipa' }}
      XC_EXPORT_OPTIONS_PATH: ${{ './Workflow/ExportOptions.plist' }}
      XC_KEY_STUB_SCRIPT_PATH: ${{ './Workflow/keyStub.py' }}

      ENCRYPTED_CERT_PATH: ${{ './Workflow/cert.p12.gpg' }}
      DECRYPTED_CERT_PATH: ${{ './Workflow/cert.p12' }}
      ENCRYPTED_PROVISION_PATH: ${{ './Workflow/enterpriseForWildCard.mobileprovision.gpg' }}
      DECRYPTED_PROVISION_PATH: ${{ './Workflow/enterpriseForWildCard.mobileprovision' }}
      CERT_ENC_PWD: ${{ secrets.CERT_ENC_PWD }}
      PROVISION_ENC_PWD: ${{ secrets.PROVISION_ENC_PWD }}
      APP_KEY: ${{ secrets.APP_KEY }}
      ARTIFACT_ZIP_PWD: ${{ secrets.ARTIFACT_ZIP_PWD }}
      KEYCHAIN: ${{ 'temp.keychain' }}
      APP_KEY_HEADER_PATH: ${{ './NERTC1to1Sample/AppKey.h' }}
    defaults:
      run:
        shell: bash
        working-directory: ./One-to-One-Video/NERtcSample-1to1-iOS-Objective-C

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python 2.7
      uses: actions/setup-python@v2
      with:
          python-version: '2.7'
          
    - name: App Key Stub
      run: 
        python $XC_KEY_STUB_SCRIPT_PATH
    
    - name: Install Dependencies
      run: pod install
      
    - name: Select Xcode
      run: 
        sudo xcode-select -s /Applications/Xcode_$XC_VERSION.app

    - name: Configure Keychain
      run: 
        security create-keychain -p "" "$KEYCHAIN";
        security list-keychains -s "$KEYCHAIN";
        security default-keychain -s "$KEYCHAIN";
        security unlock-keychain -p "" "$KEYCHAIN";
        security set-keychain-settings;
        security list-keychains;
    
    - name: Configure Code Signing
      run:
        gpg -d -o "$DECRYPTED_CERT_PATH" --pinentry-mode=loopback --passphrase "$CERT_ENC_PWD" "$ENCRYPTED_CERT_PATH";
        gpg -d -o "$DECRYPTED_PROVISION_PATH" --pinentry-mode=loopback --passphrase "$PROVISION_ENC_PWD" "$ENCRYPTED_PROVISION_PATH";
        security import "$DECRYPTED_CERT_PATH" -k "$KEYCHAIN" -P "" -A;
        security set-key-partition-list -S apple-tool:,apple:, -s -k "" "$KEYCHAIN";
        mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles";
        UUID=$(/usr/libexec/PlistBuddy -c "Print :UUID" /dev/stdin <<< $(security cms -D -i $DECRYPTED_PROVISION_PATH));
        cp "$DECRYPTED_PROVISION_PATH" "$HOME/Library/MobileDevice/Provisioning Profiles/$UUID.mobileprovision";

    - name: Archive
      run:
        mkdir -p $XC_ARCHIVE_DIR;
        UUID=$(/usr/libexec/PlistBuddy -c "Print :UUID" /dev/stdin <<< $(security cms -D -i $DECRYPTED_PROVISION_PATH));
        xcodebuild archive -workspace $XC_WORKSPACE -scheme $XC_SCHEME -configuration release -archivePath $XC_ARCHIVE_DIR/$XC_PROJECT_NAME.xcarchive CODE_SIGN_IDENTITY="iPhone Distribution" PROVISIONING_PROFILE_SPECIFIER=$UUID;

    - name: Export IPA
      run: 
        mkdir -p $XC_IPA_DIR;
        xcodebuild -exportArchive -archivePath $XC_ARCHIVE_DIR/$XC_PROJECT_NAME.xcarchive -exportPath $XC_IPA_DIR -exportOptionsPlist $XC_EXPORT_OPTIONS_PATH;
        mv $XC_IPA_DIR/$XC_SCHEME.ipa $XC_IPA_DIR/$XC_PROJECT_NAME.ipa;

    - name: Zip IPA
      run:
        zip -P $ARTIFACT_ZIP_PWD -j $XC_PROJECT_NAME.zip $XC_IPA_DIR/$XC_PROJECT_NAME.ipa

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: NERtcSample-1to1-iOS-Objective-C
        path: ./One-to-One-Video/NERtcSample-1to1-iOS-Objective-C/NERtcSample-1to1-iOS-Objective-C.zip
